'
data_seperate<- list(
N=length(data$H),
theta=data$average
)
fit <- stan(model_code = stan_model, data = data_seperate)
library("rstan")
setwd('/Users/mingjie/Desktop/bda_project')
data_seperate<- list(
N=length(data$H),
theta=data$average
)
fit <- stan(file = 'model1.stan', data = data_seperate)
fit <- stan(file = 'model1.stan', data = data_seperate)
stan_model1<-'
data {
int<lower=0> N; // number of palyers
vector [N] theta;
}
parameters {
real<lower=0,upper=1> phi;
real<lower=0.1> lambda;
}
transformed parameters {
real<lower=0> alpha = lambda * phi;
real<lower=0> beta = lambda * (1 - phi);
}
model {
phi ~ beta(1, 1); // uniform on phi, could drop
lambda ~ pareto(0.1, 1.5);
for (n in 1:N)
theta[n] ~ beta(alpha, beta);
}
'
data_model1<- list(
N=length(data$H),
theta=data$average
)
fit <- stan(model_code = stan_model1, data = data_model1)
extract_model1 <- rstan::extract(fit, permuted = T)
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
mu <- mean(career_filtered$average)
sd <- sd(career_filtered$average)
params=estBetaParams(mu,sd)
params
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
mu <- mean(career_filtered$average)
sd <- sd(career_filtered$average)
params=estBetaParams(mu,sd)
alpha0=params$alpha
beta0=params$beta
ggplot(data) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
library(dplyr)
library(tidyr)
library(Lahman)
career <- Batting %>%
filter(AB > 0) %>%
anti_join(Pitching, by = "playerID") %>%
group_by(playerID) %>%
summarize(H = sum(H), AB = sum(AB)) %>%
mutate(average = H / AB)
# use names along with the player IDs
career <- Master %>%
tbl_df() %>%
select(playerID, nameFirst, nameLast) %>%
unite(name, nameFirst, nameLast, sep = " ") %>%
inner_join(career, by = "playerID") %>%
select(-playerID)
data=career
data
Batting
Harry=data[ which(data$name=='Harry Atkinson'),]
Hank=data[ which(data$name=='Hank Aaron'),]
rbind(Harry,Hank)
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
mu <- mean(career_filtered$average)
sd <- sd(career_filtered$average)
params=estBetaParams(mu,sd)
alpha0=params$alpha
beta0=params$beta
ggplot(data) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
mu <- mean(data$average)
sd <- sd(data$average)
params=estBetaParams(mu,sd)
alpha0=params$alpha
beta0=params$beta
ggplot(data) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
mu <- mean(data$average)
sd <- sd(data$average)
mu
sd
params=estBetaParams(mu,sd)
params
alpha0=params$alpha
beta0=params$beta
# just like the graph, we have to filter for the players we actually
# have a decent estimate of
career_filtered <- career %>%
filter(AB >= 500)
m <- MASS::fitdistr(career_filtered$average, dbeta,
start = list(shape1 = 1, shape2 = 10))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
cat("\nThe alpha0 is: ", alpha0)
cat("\nThe beta0 is: ", beta0)
alpha0/(alpha0+beta0)
alpha0*beta0/((alpha0+beta0)^2*(alpha0+beta0+1))
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
career_filtered <- career %>%
filter(AB >= 300)
mu <- mean(career_filtered$average)
sd <- sd(career_filtered$average)
params=estBetaParams(mu,sd)
alpha0=params$alpha
beta0=params$beta
ggplot(data) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
career_filtered <- career %>%
filter(AB >= 600)
mu <- mean(career_filtered$average)
sd <- sd(career_filtered$average)
params=estBetaParams(mu,sd)
alpha0=params$alpha
beta0=params$beta
ggplot(data) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
data_filtered <- career %>%
filter(AB >= 700)
mu <- mean(data_filtered$average)
sd <- sd(data_filtered$average)
params=estBetaParams(mu,sd)
alpha0=params$alpha
beta0=params$beta
ggplot(data_filtered) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
data_filtered <- career %>%
filter(AB >= 500)
mu <- mean(data_filtered$average)
sd <- sd(data_filtered$average)
params=estBetaParams(mu,sd)
alpha0=params$alpha
beta0=params$beta
ggplot(data_filtered) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
ggplot(data_filtered) +
# geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
ggplot(data_filtered) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
ggplot(data_filtered) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
data_filtered <- career %>%
filter(AB >=300)
m <- MASS::fitdistr(data_filtered$average, dbeta,
start = list(shape1 = 1, shape2 = 10))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
cat("\nThe alpha0 is: ", alpha0)
cat("\nThe beta0 is: ", beta0)
ggplot(data_filtered) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
data_filtered <- career %>%
filter(AB >=1000)
m <- MASS::fitdistr(data_filtered$average, dbeta,
start = list(shape1 = 1, shape2 = 10))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
cat("\nThe alpha0 is: ", alpha0)
cat("\nThe beta0 is: ", beta0)
data_filtered <- career %>%
filter(AB >=300)
m <- MASS::fitdistr(data_filtered$average, dbeta,
start = list(shape1 = 1, shape2 = 10))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
cat("\nThe alpha0 is: ", alpha0)
cat("\nThe beta0 is: ", beta0)
ggplot(data_filtered) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
data_filtered <- career %>%
filter(AB >=1000)
m <- MASS::fitdistr(data_filtered$average, dbeta,
start = list(shape1 = 1, shape2 = 10))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
cat("\nThe alpha0 is: ", alpha0)
cat("\nThe beta0 is: ", beta0)
ggplot(data_filtered) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
data_filtered <- career %>%
filter(AB >=1000)
m <- MASS::fitdistr(data_filtered$average, dbeta,
start = list(shape1 = 0, shape2 = 0))
data_filtered <- career %>%
filter(AB >=1000)
m <- MASS::fitdistr(data_filtered$average, dbeta,
start = list(shape1 = 1, shape2 = 1))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
cat("\nThe alpha0 is: ", alpha0)
cat("\nThe beta0 is: ", beta0)
data_filtered <- career %>%
filter(AB >=1000)
m <- MASS::fitdistr(data_filtered$average, dbeta,
start = list(shape1 = 10, shape2 = 100))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
cat("\nThe alpha0 is: ", alpha0)
cat("\nThe beta0 is: ", beta0)
data_filtered <- career %>%
filter(AB >=1000)
m <- MASS::fitdistr(data_filtered$average, dbeta,
start = list(shape1 = 10, shape2 = 10))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
cat("\nThe alpha0 is: ", alpha0)
cat("\nThe beta0 is: ", beta0)
data_filtered <- career %>%
filter(AB >=1000)
m <- MASS::fitdistr(data_filtered$average, dbeta,
start = list(shape1 = 1, shape2 = 1))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
cat("\nThe alpha0 is: ", alpha0)
cat("\nThe beta0 is: ", beta0)
data_filtered <- career %>%
filter(AB >=1000)
m <- MASS::fitdistr(data_filtered$average, dbeta,
start = list(shape1 = 10, shape2 = 10))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
cat("\nThe alpha0 is: ", alpha0)
cat("\nThe beta0 is: ", beta0)
data_filtered <- career %>%
filter(AB >=1000)
m <- MASS::fitdistr(data_filtered$average, dbeta,
start = list(shape1 = 1, shape2 = 1))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
cat("\nThe alpha0 is: ", alpha0)
cat("\nThe beta0 is: ", beta0)
data_filtered <- career %>%
filter(AB >=1000)
m <- MASS::fitdistr(data_filtered$average, dbeta,
start = list(shape1 = 1, shape2 = 1))
alpha0 <- m$estimate[1]
beta0 <- m$estimate[2]
cat("\nThe alpha0 is: ", alpha0)
cat("\nThe beta0 is: ", beta0)
ggplot(data_filtered) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting average")
ggplot(data_filtered) +
geom_histogram(aes(average, y = ..density..), binwidth = .005) +
stat_function(fun = function(x) dbeta(x, alpha0, beta0), color = "red",
size = 1) +
xlab("Batting Average")
data_ba <- data %>%
mutate(ba_estimate = (H + alpha0) / (AB + alpha0 + beta0))
data_ba <- data %>%
mutate(ba_estimate = (H + alpha0) / (AB + alpha0 + beta0))
data_ba
data_ba <- data %>%
mutate(ba_estimate = (H + alpha0) / (AB + alpha0 + beta0))
head(data_ba)
Harry=data[ which(data_ba$name=='Harry Atkinson'),]
Hank=data[ which(data_ba$name=='Hank Aaron'),]
rbind(Harry,Hank)
Harry=data_ba[ which(data_ba$name=='Harry Atkinson'),]
Hank=data_ba[ which(data_ba$name=='Hank Aaron'),]
rbind(Harry,Hank)
data_ba[order(data_ba$ba_estimate)]
sort(data_ba$ba_estimate)
sort(data_ba$ba_estimate, decreasing = TRUE)
# sort(data_ba$ba_estimate, decreasing = TRUE)
data_ba[order(-data_ba$ba_estimate),]
head(data_ba[order(-data_ba$ba_estimate),],10)
options(digits = 3)
career_eb %>%
arrange(desc(eb_estimate)) %>%
head(5) %>%
kable()
ggplot(career_eb, aes(average, eb_estimate, color = AB)) +
geom_hline(yintercept = alpha0 / (alpha0 + beta0), color = "red", lty = 2) +
geom_point() +
geom_abline(color = "red") +
scale_colour_gradient(trans = "log", breaks = 10 ^ (1:5)) +
xlab("Batting average") +
ylab("Empirical Bayes batting average")
ggplot(data_ba, aes(average, ba_estimate, color = AB)) +
geom_hline(yintercept = alpha0 / (alpha0 + beta0), color = "red", lty = 2) +
geom_point() +
geom_abline(color = "red") +
scale_colour_gradient(trans = "log", breaks = 10 ^ (1:5)) +
xlab("Batting average") +
ylab("Empirical Bayes batting average")
alpha0=81
beta0=219
data_ba <- data %>%
mutate(ba_estimate = (H + alpha0) / (AB + alpha0 + beta0))
head(data_ba[order(-data_ba$ba_estimate),],10)
library("rstan")
setwd('/Users/mingjie/Desktop/bda_project')
data_seperate<- list(
N=length(data$H),
theta=data$average
)
fit <- stan(file = 'model1.stan', data = data_seperate)
fit
library("rstan")
setwd('/Users/mingjie/Desktop/bda_project')
data_fit<- list(
N=length(data$H),
bats=data$AB,
hits=data$H
)
fit <- stan(file = 'model2.stan', data = data_seperate)
setwd('/Users/mingjie/Desktop/bda_project')
data_fit<- list(
N=length(data$H),
bats=data$AB,
hits=data$H
)
fit <- stan(file = 'model2.stan', data = data_seperate)
fit
data_fit<- list(
N=length(data$H),
bats=data$AB,
hits=data$H
)
fit <- stan(file = 'model2.stan', data = data_seperate)
fit <- stan(file = 'model2.stan', data = data_seperate)
fit <- stan(file = 'model2.stan', data = data_seperate)
fit <- stan(file = 'model2.stan', data = data_seperate)
# This chunk just sets echo = TRUE as default (i.e. print all code)
library("rstan")
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
library(knitr)
opts_chunk$set(cache = TRUE, warning = FALSE, message = FALSE)
options(digits = 3)
library(ggplot2)
theme_set(theme_bw())
library(dplyr)
library(tidyr)
library(Lahman)
career <- Batting %>%
filter(AB > 0) %>%
anti_join(Pitching, by = "playerID") %>%
group_by(playerID) %>%
summarize(H = sum(H), AB = sum(AB)) %>%
mutate(average = H / AB)
# use names along with the player IDs
career <- Master %>%
tbl_df() %>%
select(playerID, nameFirst, nameLast) %>%
unite(name, nameFirst, nameLast, sep = " ") %>%
inner_join(career, by = "playerID") %>%
select(-playerID)
data=career
data
library(dplyr)
library(tidyr)
library(Lahman)
career <- Batting %>%
filter(AB > 0) %>%
anti_join(Pitching, by = "playerID") %>%
group_by(playerID) %>%
summarize(H = sum(H), AB = sum(AB)) %>%
mutate(average = H / AB)
# use names along with the player IDs
career <- Master %>%
tbl_df() %>%
select(playerID, nameFirst, nameLast) %>%
unite(name, nameFirst, nameLast, sep = " ") %>%
inner_join(career, by = "playerID") %>%
select(-playerID)
data=career
data
library("rstan")
setwd('/Users/mingjie/Desktop/bda_project')
data_fit<- list(
N=length(data$H),
bats=data$AB,
hits=data$H
)
fit <- stan(file = 'model2.stan', data = data_seperate)
library("rstan")
setwd('/Users/mingjie/Desktop/bda_project')
data_fit<- list(
N=length(data$H),
bats=data$AB,
hits=data$H
)
fit <- stan(file = 'model2.stan', data = data_fit)
setwd('/Users/mingjie/Desktop/bda_project')
data_fit<- list(
N=length(data$H),
bats=data$AB,
hits=data$H
)
fit <- stan(file = 'model2.stan', data = data_fit)
setwd('/Users/mingjie/Desktop/bda_project')
data_fit<- list(
N=length(data$H),
bats=data$AB,
hits=data$H
)
fit <- stan(file = 'model2.stan', data = data_fit)
setwd('/Users/mingjie/Desktop/bda_project')
data_fit<- list(
N=length(data$H),
bats=data$AB,
hits=data$H
)
fit <- stan(file = 'model2.stan', data = data_fit)
setwd('/Users/mingjie/Desktop/bda_project')
data_fit<- list(
N=length(data$H),
bats=data$AB,
hits=data$H
)
fit <- stan(file = 'model2.stan', data = data_fit)
fit <- stan(file = 'model2.stan', data = data_fit)
fit <- stan(file = 'model2.stan', data = data_fit)
fit <- stan(file = 'model2.stan', data = data_fit)
fit <- stan(file = 'model2.stan', data = data_fit)
fit <- stan(file = 'model2.stan', data = data_fit)
